[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
on_i = 1

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  imap <C-k> <Plug>(neosnippet_expand_or_jump)
  smap <C-k> <Plug>(neosnippet_expand_or_jump)
  xmap <C-k> <Plug>(neosnippet_expand_target)
  if has('conceal')
    set conceallevel=2 concealcursor=niv
  endif
'''
on_i  = 1
on_ft = ['snippet']
depends = ['neosnippet-snippets']

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'plasticboy/vim-markdown'

[[plugins]]
repo = 'kannokanno/previm'

[[plugins]]
repo = 'derekwyatt/vim-scala'

[[plugins]]
repo = 'itchyny/vim-haskell-indent'

[[plugins]]
repo = 'eagletmt/ghcmod-vim'

[[plugins]]
repo = 'ujihisa/neco-ghc'

[[plugins]]
repo = 'ujihisa/ref-hoogle'

[[plugins]]
repo = 'vim-ruby/vim-ruby'

[[plugins]]
repo = 'thinca/vim-quickrun'
hook_add = '''
nmap <leader>r :QuickRun<CR>
let g:quickrun_config = {
  \ 'runner' : 'vimproc',
  \ 'runner/vimproc/updatetime' : 10,
  \ 'outputter' : 'error',
  \ 'outputter/error/success' : 'buffer',
  \ 'outputter/error/error'   : 'quickfix',
  \ 'outputter/buffer/close_on_empty' : 1,
  \ }
'''
depends = ['open-browser.vim']
hook_source = '''
let g:quickrun_config.markdown = {
  \ 'command' : 'pandoc',
  \ 'cmdopt' : '-s --self-contained -t html5 -c github.css',
  \ 'outputter' : 'browser',
  \ 'exec' : ['%c %s %o'],
  \}
let g:quickrun_config.tex = {
  \ 'command' : 'latexmk',
  \ 'cmdopt' : '-r ~/.latexmkrc -pv',
  \ 'outputter' : 'null',
  \ 'exec' : ['%c %o root.tex'],
  \}
let g:quickrun_config.haskell = {
  \ 'command' : 'stack',
  \ 'cmdopt' : 'runhaskell',
  \ 'exec' : ['%c %o %s %a'],
  \}
let g:quickrun_config.python = {
  \ 'command' : 'python',
  \ 'exec' : ['%c %o %s %a'],
  \}
let g:quickrun_config.ruby = {
  \ 'command' : 'ruby',
  \ 'exec' : ['%c %o %s %a'],
  \}
'''

[[plugins]]
repo = 'mattn/webapi-vim'

[[plugins]]
repo = 'mattn/vim-oauth'

[[plugins]]
repo = 'powerman/vim-plugin-AnsiEsc'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
nnoremap <silent><C-e> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'tyru/open-browser.vim'
hook_add = '''
let g:netrw_nogx = 1
nmap gx <Plug>(openbrowser-smart-search)
vmap gx <Plug>(openbrowser-smart-search)
'''
